404不存的网页



装饰器
before_first_request ：注册一个函数，在处理第一个请求之前运行。
before_request ：注册一个函数，在每次请求之前运行。   #  Ajax?
after_request ：注册一个函数，如果没有未处理的异常抛出，在每次请求之后运行。
teardown_request ：注册一个函数，即使有未处理的异常抛出，也在每次请求之后运行。



Flask内置函数：

    redirect()：
    重定向经常使用 302 状态码表示，指向的地址由 Location 首部提供。重定向响应可以使用
3 个值形式的返回值生成，也可在 Response 对象中设定。不过，由于使用频繁，Flask 提
供了 redirect() 辅助函数，用于生成这种响应

    abort（）：
还有一种特殊的响应由 abort 函数生成，用于处理错误。在下面这个例子中，如果 URL 中
动态参数 id 对应的用户不存在，就返回状态码 404


（例如，用户在网站中注册了一个新账户。用户在表单中输入电子邮件地址和密码，然后点
击提交按钮。服务器接收到包含用户输入数据的请求，然后 Flask 把请求分发到处理注册
请求的视图函数。）
业务逻辑：视图函数需要访问数据库，添加新用户
变现逻辑：生成响应回送浏览器


模板：就是html文件
渲染模板：在反应函数中通过相关方法返回这个html（模板）文件给浏览器，
    模板（{{ name }}）可以传参（在模板中使用的 {{ name }} 结构表示一个变量，它是一种特殊的占位符，告诉模板引擎这个位置的值从渲染模板时使用的数据中获取。）
    过滤器修改变量：   hello,{{ name|capitalize }}  -->首字母大写
        千万别在不可信的值上使用 safe 过滤器，例如用户在表单中输入的文本。

另一种重复使用代码的强大方式是模板继承，它类似于 Python 代码中的类继承
！！！！妈的，还有这招

在模板中使用条件控制语句。
    {% if user %}
    Hello, {{ user }}!
    {% else %}
    Hello, Stranger!
    {% endif %}
还支持宏。宏类似于 Python 代码中的函数。


！！！！！！！！！！！models.py加了新类，manage.py也要修改相应的数据！！！！！！！！！！！！！